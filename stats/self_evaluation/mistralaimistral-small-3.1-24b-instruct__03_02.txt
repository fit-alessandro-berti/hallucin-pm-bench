3.0

**Problems/errors:**
1. The `flowElements` array does not start with a `startEvent`
2. Activity Types : Main process vs. WP Activity
3. there are references to `mainProcessActivities`;
4. wrong `timeDuration` in `"waitCustomerReply"`.
    To properly define the time period of 24 hours, you need to specify `PT24H` (i.e., 24 hours), not `P1D24H` (which would incorrectly correspond to a time period of 1 day and 24 hours). Indeed, given that Â `P1DT0H0M0S` is the expression valid in XML, there are no means of iterating by fractions of a day.
5. Missing properties from non-`Task` type elements. This doesn't endanger functionality, but certainly invalidates the diagram. This would be good to point out especially since BPV spec aid in automated generation of business procedures. However, since this is proof of concept, it would be more relevant to **not** include auxiliary information. Thus while incompatible with backend automation, it unfortunately would not qualify for an error.
6. There are multiple **non-rectangular models embedding parallel branching **[See Assignment activity "Arrange for Parallel Processing"]**. There are **no subprocess; therefore no container** for each parallel **branching backed by gateways**. Hence all activities, tasks and events should reference this activity.
6. Misappropriate references to Task, Intermediate etc, instead of Elements.
6. Task **eid: "terminate"** is incorrectly referenced in **"CustomerCancels"? BPMN specification **strictly prohibits a process element from non-generalization with other than preceding events.** Thus, `CustomerCancelsTicket` should be referenced by and end **Event**.
7. `incoming` and `out going` take the IDs of elements and not the other way around.
8. The `task`, `eventDefinitions` and `eventConditions` fields are **deliberately** missing properties variant to the **element type**.
9.  The `id` keys referring items in `messages.message` structure have **non-matching** equivalents in `"eventConditions"` nor other task "task".
10. The diagram structure of the `messages.message` seem be better suitable for business rules, than actual processes/events.
11. **system versus Business process rules**. `eventCondition`, and similarly `eventDefinitions` seem processes, rather than task-oriented. Business process rules should be implemented outside the generated model, or edited in a format supported by *back-end** or modelled as **Sequential Midway**. However, this one could be forgiven, for it would complicate the generated schematic.

Even if suboptimal, using proper keys inferred from the BPMN 2.0 standard I could put this 2-2.5 points upwards **if** this point set **were** referenced. Since it is **not**, **i**f it comes down to solemn generation of JSON, this diagram will significantly fail in the back end, thus can't be tolerated.