System (context)
You are a senior process-mining analyst at Acme Corp.  
Below are two *similarly-named but distinct* processes.  
Read them both carefully; your answers must refer **only** to the process explicitly asked for.

────────────────────────────────────
Process A – Retail_Ordering
1. Receive_Order  
2. Verify_Payment  
3. Pick_Items  
4. **Pack_Items** and **Book_Courier** start together once Pick_Items finishes.  
5. Ship_Order after both Pack_Items *and* Book_Courier are done.  
6. Send_Invoice  
────────────────────────────────────
Process B – Manufacturing_WorkOrder
1. Create_Work_Order  
2. **Procure_Materials** *and* **Schedule_Machines** may start immediately after Create_Work_Order and may run **simultaneously**.  
3. Fabricate begins only after **both** Procure_Materials *and* Schedule_Machines are complete.  
4. **Quality_Check** *and* **Create_Documentation** begin **in parallel** right after Fabricate.  
5. Package starts when **both** Quality_Check *and* Create_Documentation are finished.  
6. Dispatch_to_Customer follows Package.  
7. Close_Work_Order completes the process.  
────────────────────────────────────

User (task)
> **List every pair of tasks in *Process B* that can be executed in parallel according to the description above.**  
> • *Ignore Process A entirely.*  
> • Return the pairs in **alphabetical order**, both *within* each pair and in your overall list.  
> • Output one pair per line, using the format  
>   `Task_X  —  Task_Y`
