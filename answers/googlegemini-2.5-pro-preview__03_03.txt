```xml
<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:dc="http://www.omg.org/spec/DD/20100524/DC"
                  xmlns:di="http://www.omg.org/spec/DD/20100524/DI"
                  targetNamespace="http://bpmn.io/schema/bpmn"
                  id="wrc_Definitions_WarrantyReplacement">

  <bpmn:process id="wrc_Process_WarrantyReplacement_v1.3" name="Warranty-Replacement v1.3" isExecutable="true">

    <!-- 1. The process starts when a customer submits an online warranty claim. -->
    <bpmn:startEvent id="wrc_StartEvent_ClaimSubmitted" name="Online warranty claim submitted">
      <bpmn:outgoing>wrc_SeqFlow_StartToValidate</bpmn:outgoing>
    </bpmn:startEvent>

    <bpmn:sequenceFlow id="wrc_SeqFlow_StartToValidate" sourceRef="wrc_StartEvent_ClaimSubmitted" targetRef="wrc_Task_ValidateClaim" />

    <!-- 2. A service agent validates the claim. -->
    <bpmn:task id="wrc_Task_ValidateClaim" name="Validate the claim">
      <bpmn:incoming>wrc_SeqFlow_StartToValidate</bpmn:incoming>
      <bpmn:incoming>wrc_SeqFlow_RequestInfo_To_Validate</bpmn:incoming> <!-- Loop back for re-validation -->
      <bpmn:outgoing>wrc_SeqFlow_ValidateToCompletenessCheck</bpmn:outgoing>
    </bpmn:task>

    <bpmn:sequenceFlow id="wrc_SeqFlow_ValidateToCompletenessCheck" sourceRef="wrc_Task_ValidateClaim" targetRef="wrc_ExclusiveGateway_ClaimCompletenessCheck" />

    <!-- Gateway: If the claim is incomplete... -->
    <bpmn:exclusiveGateway id="wrc_ExclusiveGateway_ClaimCompletenessCheck" name="Claim Complete?">
      <bpmn:incoming>wrc_SeqFlow_ValidateToCompletenessCheck</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_CompletenessCheck_To_RequestInfo</bpmn:outgoing> <!-- Incomplete path -->
      <bpmn:outgoing>wrc_SeqFlow_CompletenessCheck_To_CheckEligibility</bpmn:outgoing> <!-- Complete path -->
    </bpmn:exclusiveGateway>

    <!-- Path: If incomplete, the agent requests missing information -->
    <bpmn:sequenceFlow id="wrc_SeqFlow_CompletenessCheck_To_RequestInfo" name="Incomplete" sourceRef="wrc_ExclusiveGateway_ClaimCompletenessCheck" targetRef="wrc_Task_RequestMissingInformation" />
    
    <bpmn:task id="wrc_Task_RequestMissingInformation" name="Request missing information">
      <bpmn:incoming>wrc_SeqFlow_CompletenessCheck_To_RequestInfo</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_RequestInfo_To_Validate</bpmn:outgoing>
    </bpmn:task>

    <!-- ...and waits until it is received before re-validating. (Loop back) -->
    <bpmn:sequenceFlow id="wrc_SeqFlow_RequestInfo_To_Validate" sourceRef="wrc_Task_RequestMissingInformation" targetRef="wrc_Task_ValidateClaim" />

    <!-- Path: If complete (implicitly), proceed to step 3 -->
    <bpmn:sequenceFlow id="wrc_SeqFlow_CompletenessCheck_To_CheckEligibility" name="Complete" sourceRef="wrc_ExclusiveGateway_ClaimCompletenessCheck" targetRef="wrc_Task_CheckWarrantyEligibility" />

    <!-- 3. After validation, the agent checks warranty eligibility. -->
    <bpmn:task id="wrc_Task_CheckWarrantyEligibility" name="Check warranty eligibility">
      <bpmn:incoming>wrc_SeqFlow_CompletenessCheck_To_CheckEligibility</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_CheckEligibility_To_WarrantyDecision</bpmn:outgoing>
    </bpmn:task>

    <bpmn:sequenceFlow id="wrc_SeqFlow_CheckEligibility_To_WarrantyDecision" sourceRef="wrc_Task_CheckWarrantyEligibility" targetRef="wrc_ExclusiveGateway_WarrantyDecision" />

    <!-- Gateway: Warranty Decision -->
    <bpmn:exclusiveGateway id="wrc_ExclusiveGateway_WarrantyDecision" name="Warranty Eligible?">
      <bpmn:incoming>wrc_SeqFlow_CheckEligibility_To_WarrantyDecision</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_WarrantyDecision_To_ParallelSplit</bpmn:outgoing> <!-- Within warranty path -->
      <bpmn:outgoing>wrc_SeqFlow_WarrantyDecision_To_SendRejection</bpmn:outgoing> <!-- Out of warranty path -->
    </bpmn:exclusiveGateway>

    <!-- Path: If the product is out of warranty, send rejection notice and end. -->
    <bpmn:sequenceFlow id="wrc_SeqFlow_WarrantyDecision_To_SendRejection" name="Out of warranty" sourceRef="wrc_ExclusiveGateway_WarrantyDecision" targetRef="wrc_Task_SendRejectionNotice" />

    <bpmn:task id="wrc_Task_SendRejectionNotice" name="Send rejection notice">
      <bpmn:incoming>wrc_SeqFlow_WarrantyDecision_To_SendRejection</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_SendRejection_To_EndRejected</bpmn:outgoing>
    </bpmn:task>

    <bpmn:sequenceFlow id="wrc_SeqFlow_SendRejection_To_EndRejected" sourceRef="wrc_Task_SendRejectionNotice" targetRef="wrc_EndEvent_ClaimRejected" />

    <bpmn:endEvent id="wrc_EndEvent_ClaimRejected" name="Claim Rejected">
      <bpmn:incoming>wrc_SeqFlow_SendRejection_To_EndRejected</bpmn:incoming>
    </bpmn:endEvent>

    <!-- Path: If the product is within warranty, proceed. -->
    <bpmn:sequenceFlow id="wrc_SeqFlow_WarrantyDecision_To_ParallelSplit" name="Within warranty" sourceRef="wrc_ExclusiveGateway_WarrantyDecision" targetRef="wrc_ParallelGateway_SplitTasks" />

    <!-- 4. For eligible claims, two activities occur in parallel: -->
    <bpmn:parallelGateway id="wrc_ParallelGateway_SplitTasks">
      <bpmn:incoming>wrc_SeqFlow_WarrantyDecision_To_ParallelSplit</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_ParallelSplit_To_CreateShipment</bpmn:outgoing>
      <bpmn:outgoing>wrc_SeqFlow_ParallelSplit_To_SchedulePickup</bpmn:outgoing>
    </bpmn:parallelGateway>

    <bpmn:sequenceFlow id="wrc_SeqFlow_ParallelSplit_To_CreateShipment" sourceRef="wrc_ParallelGateway_SplitTasks" targetRef="wrc_Task_CreateShipmentOrder" />
    <!-- 4a. Create shipment order for the replacement unit. -->
    <bpmn:task id="wrc_Task_CreateShipmentOrder" name="Create shipment order">
      <bpmn:incoming>wrc_SeqFlow_ParallelSplit_To_CreateShipment</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_CreateShipment_To_ParallelJoin</bpmn:outgoing>
    </bpmn:task>
    <bpmn:sequenceFlow id="wrc_SeqFlow_CreateShipment_To_ParallelJoin" sourceRef="wrc_Task_CreateShipmentOrder" targetRef="wrc_ParallelGateway_JoinTasks" />

    <bpmn:sequenceFlow id="wrc_SeqFlow_ParallelSplit_To_SchedulePickup" sourceRef="wrc_ParallelGateway_SplitTasks" targetRef="wrc_Task_ScheduleCourierPickup" />
    <!-- 4b. Schedule courier pickup of the faulty product. -->
    <bpmn:task id="wrc_Task_ScheduleCourierPickup" name="Schedule courier pickup">
      <bpmn:incoming>wrc_SeqFlow_ParallelSplit_To_SchedulePickup</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_SchedulePickup_To_ParallelJoin</bpmn:outgoing>
    </bpmn:task>
    <bpmn:sequenceFlow id="wrc_SeqFlow_SchedulePickup_To_ParallelJoin" sourceRef="wrc_Task_ScheduleCourierPickup" targetRef="wrc_ParallelGateway_JoinTasks" />

    <!-- Join parallel activities -->
    <bpmn:parallelGateway id="wrc_ParallelGateway_JoinTasks">
      <bpmn:incoming>wrc_SeqFlow_CreateShipment_To_ParallelJoin</bpmn:incoming>
      <bpmn:incoming>wrc_SeqFlow_SchedulePickup_To_ParallelJoin</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_ParallelJoin_To_UpdateInventory</bpmn:outgoing>
    </bpmn:parallelGateway>

    <bpmn:sequenceFlow id="wrc_SeqFlow_ParallelJoin_To_UpdateInventory" sourceRef="wrc_ParallelGateway_JoinTasks" targetRef="wrc_Task_UpdateInventoryRecords" />

    <!-- 5. Once both parallel activities finish, update inventory records, -->
    <bpmn:task id="wrc_Task_UpdateInventoryRecords" name="Update inventory records">
      <bpmn:incoming>wrc_SeqFlow_ParallelJoin_To_UpdateInventory</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_UpdateInventory_To_CloseClaim</bpmn:outgoing>
    </bpmn:task>

    <bpmn:sequenceFlow id="wrc_SeqFlow_UpdateInventory_To_CloseClaim" sourceRef="wrc_Task_UpdateInventoryRecords" targetRef="wrc_Task_CloseClaim" />

    <!-- ...then close the claim and end the process. -->
    <bpmn:task id="wrc_Task_CloseClaim" name="Close the claim">
      <bpmn:incoming>wrc_SeqFlow_UpdateInventory_To_CloseClaim</bpmn:incoming>
      <bpmn:outgoing>wrc_SeqFlow_CloseClaim_To_EndCompleted</bpmn:outgoing>
    </bpmn:task>

    <bpmn:sequenceFlow id="wrc_SeqFlow_CloseClaim_To_EndCompleted" sourceRef="wrc_Task_CloseClaim" targetRef="wrc_EndEvent_ClaimCompleted" />

    <bpmn:endEvent id="wrc_EndEvent_ClaimCompleted" name="Claim Completed">
      <bpmn:incoming>wrc_SeqFlow_CloseClaim_To_EndCompleted</bpmn:incoming>
    </bpmn:endEvent>

  </bpmn:process>
</bpmn:definitions>
```