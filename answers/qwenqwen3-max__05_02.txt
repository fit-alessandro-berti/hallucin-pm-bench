```diff
--- original.bpmn
+++ improved.bpmn
@@ -15,7 +15,7 @@
     <bpmn:sequenceFlow id="Flow_3" sourceRef="Task_PrepareContract" targetRef="Task_SignContract"/>
     <bpmn:userTask id="Task_SignContract"     name="Sign Contract"          camunda:dueDate="P3D"/>
     <bpmn:sequenceFlow id="Flow_4" sourceRef="Task_SignContract" targetRef="Task_CollectEquipment"/>
-    <bpmn:userTask id="Task_CollectEquipment" name="Collect Equipment"      camunda:dueDate="P5D"/>
+    <bpmn:userTask id="Task_CollectEquipment" name="Collect Equipment"      camunda:dueDate="P1D"/>
     <bpmn:sequenceFlow id="Flow_5" sourceRef="Task_CollectEquipment" targetRef="Task_GrantAccess"/>
     <bpmn:serviceTask id="Task_GrantAccess"   name="Grant System Access"    camunda:dueDate="P1D" camunda:type="external"/>
     <bpmn:sequenceFlow id="Flow_6" sourceRef="Task_GrantAccess" targetRef="EndEvent_1"/>
```

Reducing `Task_CollectEquipment`â€™s due date from P5D to P1D tightens the longest bottleneck without altering process structure or dependencies.