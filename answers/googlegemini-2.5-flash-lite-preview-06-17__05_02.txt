```diff
--- a/process.bpmn
+++ b/process.bpmn
@@ -10,22 +10,22 @@
     <bpmn:startEvent id="StartEvent_1" name="New Hire"/>
     <bpmn:sequenceFlow id="Flow_1" sourceRef="StartEvent_1" targetRef="Task_CreateRecord"/>
     <bpmn:userTask id="Task_CreateRecord" name="Create Employee Record" camunda:dueDate="P1D"/>
+    <bpmn:sequenceFlow id="Flow_6" sourceRef="Task_GrantAccess" targetRef="EndEvent_1"/>
     <bpmn:sequenceFlow id="Flow_2" sourceRef="Task_CreateRecord" targetRef="Task_PrepareContract"/>
     <bpmn:userTask id="Task_PrepareContract" name="Prepare Contract" camunda:dueDate="P2D"/>
-    <bpmn:sequenceFlow id="Flow_3" sourceRef="Task_PrepareContract" targetRef="Task_SignContract"/>
+    <bpmn:sequenceFlow id="Flow_3" sourceRef="Task_PrepareContract" targetRef="Task_GrantAccess"/>
     <bpmn:userTask id="Task_SignContract" name="Sign Contract" camunda:dueDate="P3D"/>
     <bpmn:sequenceFlow id="Flow_4" sourceRef="Task_SignContract" targetRef="Task_CollectEquipment"/>
     <bpmn:userTask id="Task_CollectEquipment" name="Collect Equipment" camunda:dueDate="P5D"/>
     <bpmn:sequenceFlow id="Flow_5" sourceRef="Task_CollectEquipment" targetRef="Task_GrantAccess"/>
     <bpmn:serviceTask id="Task_GrantAccess" name="Grant System Access" camunda:dueDate="P1D" camunda:type="external"/>
-    <bpmn:sequenceFlow id="Flow_6" sourceRef="Task_GrantAccess" targetRef="EndEvent_1"/>
     <bpmn:endEvent id="EndEvent_1" name="Ready to Work"/>
   </bpmn:process>
 </bpmn:definitions>
 ```
 
 By reordering the `Sign Contract` and `Grant System Access` tasks, their respective due dates can be logically sequenced to prevent the `Grant System Access` task from being the bottleneck due to the manual `Sign Contract` task.