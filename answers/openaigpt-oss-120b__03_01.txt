```xml
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             targetNamespace="http://acmetech.com/support">
  <process id="supportTicketProcess" isExecutable="false">

    <startEvent id="t1" name="Ticket Submitted"/>
    <task id="t2" name="Classify Ticket"/>
    <exclusiveGateway id="gw1" name="Is Password Reset?"/>
    <task id="t3" name="Provide Reset Instructions"/>
    <task id="t4" name="Initial Diagnosis"/>
    <task id="t5" name="Resolve Issue"/>
    <task id="t6" name="Forward to Specialist"/>
    <task id="t7" name="Confirm with Customer"/>
    <exclusiveGateway id="gw2" name="Customer confirms?"/>
    <endEvent id="end1" name="Ticket Closed"/>

    <sequenceFlow id="f1" sourceRef="t1" targetRef="t2"/>
    <sequenceFlow id="f2" sourceRef="t2" targetRef="gw1"/>
    <sequenceFlow id="f3" sourceRef="gw1" targetRef="t3">
      <conditionExpression xsi:type="tFormalExpression">class == "Password Reset"</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="f4" sourceRef="gw1" targetRef="t4"/>
    <sequenceFlow id="f5" sourceRef="t3" targetRef="t7"/>
    <sequenceFlow id="f6" sourceRef="t4" targetRef="t5">
      <conditionExpression xsi:type="tFormalExpression">diagnosis == "Resolved"</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="f7" sourceRef="t4" targetRef="t6">
      <conditionExpression xsi:type="tFormalExpression">diagnosis == "Needs Specialist"</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="f8" sourceRef="t6" targetRef="t5"/>
    <sequenceFlow id="f9" sourceRef="t5" targetRef="t7"/>
    <sequenceFlow id="f10" sourceRef="t7" targetRef="gw2"/>
    <sequenceFlow id="f11" sourceRef="gw2" targetRef="end1">
      <conditionExpression xsi:type="tFormalExpression">customer == "Confirm"</conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="f12" sourceRef="gw2" targetRef="t4">
      <conditionExpression xsi:type="tFormalExpression">customer == "Not Confirmed"</conditionExpression>
    </sequenceFlow>

  </process>
</definitions>
```